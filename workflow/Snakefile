import pandas as pd
import pathlib
from snakemake.utils import validate
import yaml

sys.path.insert(0, ".")
from lib import resource_calculator as rc

shell.executable("/bin/bash")
shell.prefix("set -euo pipefail; ")


configfile: "config/config.yaml"


validate(config, "../schema/global_config_schema.yaml")

manifest = pd.read_table(config["manifest"], sep="\t")
manifest["filename"] = [pathlib.Path(x).name.rstrip(".vcf.gz") for x in manifest["vcf"]]
manifest = manifest.set_index("filename", drop=True)
validate(manifest, "../schema/manifest_schema.yaml")

with open("config/config_resources.yaml", "r") as f:
    config_resources = yaml.safe_load(f)
validate(config_resources, "../schema/resources_config_schema.yaml")

TARGETS = expand(
    "results/verify_output/{prefix}.{suffix}",
    prefix=config["dataset-name"],
    suffix=["UD", "mu", "bed", "V"],
)
TARGETS.append("results/performance_benchmarks/performance_benchmarks.html")


rule all:
    input:
        TARGETS,


include: "rules/acquire_data.smk"
include: "rules/prepare_vcfs.smk"
include: "rules/estimate_parameters.smk"
include: "rules/performance_benchmarks.smk"
